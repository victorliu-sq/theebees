syntax = "proto3";

package Metrics;

service QueryManager {
    rpc QueryMetrics (MetricsRequest) returns (MetricsResponse) {};
}

// cpu_avg + cpu_sum
message CPUDistFloat {
    map<string, float> range2usecs = 1;
}

message CPUDistUint32 {
    map<string, uint32> range2usecs = 1;
}

message MultipleCPUDistUint32 {
    repeated CPUDistUint32 multiple_range2usecs = 1;
}

message MetricsRequest{
    string metrics = 1;
    string node_name = 2;
}

// runqlat_avg + runqlat_sum
message RunqlatFloat {
    map<string, float> range2usecs = 1;
}

message RunqlatUint32 {
    map<string, uint32> range2usecs = 1;
}

message MetricsResponse {
    CPUDistFloat cpu_avg = 1;
    CPUDistUint32 cpu_sum = 2;
    MultipleCPUDistUint32 cpu = 3;
    float pidpersec_avg = 4;
    uint32 pidpersec_sum = 5;
    RunqlatFloat runqlat_avg = 6;
    RunqlatUint32 runqlat_sum = 7;
}